# Contact: https://pabloagn.com/contact
# Part of Blog Article: the-state-of-our-world-in-2023-pt-1
# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# R Basics
# ------------------------------------------------------------------------------
# Load libraries
library(readr)
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(ggalt)
library(RColorBrewer)
library(viridis)
# Define directories
rDir <- "data/raw/"
# Define global params
min_year <- 1990
max_year <- 2022
# Data preprocessing
# ------------------------------------------------------------------------------
# Load data
df <- read.csv(file.path(rDir,
"GDP_Per_Capita",
"API_NY.GDP.PCAP.PP.CD_DS2_en_csv_v2_6011310.csv"))
# Check column names
colnames(df)
# Define base columns
base_cols <- c("Country.Name", "Country.Code", "Indicator.Name", "Indicator.Code")
# Create range of periods under study (using chars)
period_range <- as.character(seq(min_year, max_year, by=1))
# Prepend X
period_range <- paste0("X", period_range)
# Create col vector
df_cols <- c(base_cols, period_range)
# Subset by valid periods
df <- df[, df_cols]
# Reshape object for better manipulation
df_long <- pivot_longer(df,
cols = starts_with("X"),
names_to = "Year",
values_to = "Value",
names_prefix = "X"
)
# Cast years to integers
df_long$Year <- as.numeric(df_long$Year)
# Visualizations
# ------------------------------------------------------------------------------
# A simple time series
ggplot(data = df_long,
mapping = aes(x = Year, y = Value)) +
geom_line()
# Get indicator title
df_indicator <- unique(df_long$Indicator.name)[1]
# ------------------------------------------------------------------------------
# Created on Sat Nov 25 18:46:10 2023
# @author: Pablo Aguirre
# GitHub: https://github.com/pabloagn
# Website: https://pabloagn.com
# Contact: https://pabloagn.com/contact
# Part of Blog Article: the-state-of-our-world-in-2023-pt-1
# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# R Basics
# ------------------------------------------------------------------------------
# Load libraries
library(readr)
library(dplyr)
library(tidyr)
library(lubridate)
library(ggplot2)
library(ggalt)
library(RColorBrewer)
library(viridis)
# Define directories
rDir <- "data/raw/"
# Define global params
min_year <- 1990
max_year <- 2022
# Data preprocessing
# ------------------------------------------------------------------------------
# Load data
df <- read.csv(file.path(rDir,
"GDP_Per_Capita",
"API_NY.GDP.PCAP.PP.CD_DS2_en_csv_v2_6011310.csv"))
# Check column names
colnames(df)
# Define base columns
base_cols <- c("Country.Name", "Country.Code", "Indicator.Name", "Indicator.Code")
# Create range of periods under study (using chars)
period_range <- as.character(seq(min_year, max_year, by=1))
# Prepend X
period_range <- paste0("X", period_range)
# Create col vector
df_cols <- c(base_cols, period_range)
# Subset by valid periods
df <- df[, df_cols]
# Reshape object for better manipulation
df_long <- pivot_longer(df,
cols = starts_with("X"),
names_to = "Year",
values_to = "Value",
names_prefix = "X"
)
# Cast years to integers
df_long$Year <- as.numeric(df_long$Year)
# Get indicator title
df_indicator <- unique(df_long$Indicator.name)[1]
View(df_long)
# Get indicator title
df_indicator <- unique(df_long$Indicator.Name)[1]
source("~/Professional Projects/A Journey Through Data Science/Blog/socioeconomics/the-state-of-our-world-in-2023/src/R/0_r_basics.R", echo=TRUE)
source("~/Professional Projects/A Journey Through Data Science/Blog/socioeconomics/the-state-of-our-world-in-2023/src/R/0_r_basics.R", echo=TRUE)
source("~/Professional Projects/A Journey Through Data Science/Blog/socioeconomics/the-state-of-our-world-in-2023/src/R/0_r_basics.R", echo=TRUE)
View(df)
source("~/Professional Projects/A Journey Through Data Science/Blog/socioeconomics/the-state-of-our-world-in-2023/src/R/0_r_basics.R", echo=TRUE)
View(df_long)
df <- df[df$Country.Code %in% country_codes]
source("~/Professional Projects/A Journey Through Data Science/Blog/socioeconomics/the-state-of-our-world-in-2023/src/R/0_r_basics.R", echo=TRUE)
source("~/Professional Projects/A Journey Through Data Science/Blog/socioeconomics/the-state-of-our-world-in-2023/src/R/0_r_basics.R", echo=TRUE)
# A simple time series
ggplot(data = df_long,
mapping = aes(x = Year, y = Value, color = Country.Name)) +
geom_line() +
theme_gray() +
labs(title = df_indicator,
x = "Year",
y = "Value",
color = "Country")
library(ggplot2)
source("~/Professional Projects/A Journey Through Data Science/Blog/socioeconomics/the-state-of-our-world-in-2023/src/R/0_r_basics.R", echo=TRUE)
source("~/Professional Projects/A Journey Through Data Science/Blog/socioeconomics/the-state-of-our-world-in-2023/src/R/0_r_basics.R", echo=TRUE)
# Load data using read.csv (Dataframe)
df_csv <- read.csv(file.path(rDir,
"GDP_Per_Capita",
"API_NY.GDP.PCAP.PP.CD_DS2_en_csv_v2_6011310.csv"))
# Check object type
type(df_csv)
# Load data using read.csv (Dataframe)
df_csv <- read.csv(file.path(rDir,
"GDP_Per_Capita",
"API_NY.GDP.PCAP.PP.CD_DS2_en_csv_v2_6011310.csv"))
# Check object type
typeof(df_csv)
# Check object type
class(df_csv)
library(readr)
library(dplyr)
library(tidyr)
library(data.table)
library(lubridate)
library(ggplot2)
library(ggalt)
library(RColorBrewer)
library(viridis)
df_datatable <- fread(file.path(rDir,
"GDP_Per_Capita",
"API_NY.GDP.PCAP.PP.CD_DS2_en_csv_v2_6011310.csv"))
View(df_datatable)
# Check object type
class(df_datatable)
# Load data using fread (data.table)
df_datatable <- fread(file.path(rDir,
"GDP_Per_Capita",
"API_NY.GDP.PCAP.PP.CD_DS2_en_csv_v2_6011310.csv"))
# Check object type
class(df_datatable)
library(readxl)
?read_excel
df_xlsx_dataframe <- read_excel(file.path(rDir,
"Drug-Related_Crimes",
"10.1._Drug_related_crimes.xlsx"),
sheet="Formal contact")
df_xlsx_dataframe <- read_excel(file.path(rDir,
"Drug-Related_Crimes",
"10.1._Drug_related_crimes.xlsx"),
sheet="Formal contact")
View(df_xlsx_dataframe)
# Transform data.frame to data.table from excel-read file
df_xlsx_datatable <- as.data.table(df_xlsx_dataframe)
View(df_xlsx_datatable)
View(df_xlsx_dataframe)
# Check object type
class(df_xlsx_dataframe)
# Transform data.frame to data.table from excel-read file
df_xlsx_datatable <- as.data.table(df_xlsx_dataframe)
# Check object type
class(df_xlsx_datatable)
# Check column names
colnames(df_csv_dataframe)
# Load data using read.csv (Dataframe)
df_csv_dataframe <- read.csv(file.path(rDir,
"GDP_Per_Capita",
"API_NY.GDP.PCAP.PP.CD_DS2_en_csv_v2_6011310.csv"))
# Check object type
class(df_csv_dataframe)
# Load data using fread (data.table)
df_csv_datatable <- fread(file.path(rDir,
"GDP_Per_Capita",
"API_NY.GDP.PCAP.PP.CD_DS2_en_csv_v2_6011310.csv"))
# Check object type
class(df_csv_datatable)
# Load data using read_excel (Dataframe)
df_xlsx_dataframe <- read_excel(file.path(rDir,
"Drug-Related_Crimes",
"10.1._Drug_related_crimes.xlsx"),
sheet="Formal contact")
# Check object type
class(df_xlsx_dataframe)
# Transform data.frame to data.table from excel-read file
df_xlsx_datatable <- as.data.table(df_xlsx_dataframe)
# Check object type
class(df_xlsx_datatable)
# Check column names
colnames(df_csv_dataframe)
# Check object dimensions
dim(df_csv_dataframe)
# Number of cols
ncol(df_csv_dataframe)
# Number of rows
nrow(df_csv_dataframe)
# Check column names
colnames(df_csv_dataframe)
# Check object dimensions
dim(df_csv_dataframe)
# Number of cols
ncol(df_csv_dataframe)
# Number of rows
nrow(df_csv_dataframe)
# Check data types
str(df_csv_dataframe)
# Check data types
sapply(df_csv_dataframe, typeof)
data_types <- data.frame(
Column = names(df_csv_dataframe),
Type = sapply(df_csv_dataframe, typeof)
)
data_types <- data.frame(
Column = names(df_csv_dataframe),
Type = sapply(df_csv_dataframe, typeof)
)
data_types
View(data_types)
View(df_csv_dataframe)
# Select columns
df_csv_datatable
cols(df_csv_datatable)
# Select columns
colnames(df_csv_datatable)
View(df_csv_datatable)
# Load libraries
library(readr)
library(readxl)
library(dplyr)
library(tidyr)
library(data.table)
library(lubridate)
library(ggplot2)
library(ggalt)
library(RColorBrewer)
library(viridis)
# Define directories
rDir <- "data/raw/"
wDir <- "outputs"
# Define global params
min_year <- 1990
max_year <- 2022
# Data reading
# ------------------------------------------------------------------------------
# Load data using read.csv (Dataframe)
df_csv_dataframe <- read.csv(file.path(rDir,
"GDP_Per_Capita",
"API_NY.GDP.PCAP.PP.CD_DS2_en_csv_v2_6011310.csv"))
# Check object type
class(df_csv_dataframe)
# Load data using fread (data.table)
df_csv_datatable <- fread(file.path(rDir,
"GDP_Per_Capita",
"API_NY.GDP.PCAP.PP.CD_DS2_en_csv_v2_6011310.csv"))
# Check object type
class(df_csv_datatable)
# ------------------------------------------------------------------------------
# Created on Sat Nov 25 18:46:10 2023
# @author: Pablo Aguirre
# GitHub: https://github.com/pabloagn
# Website: https://pabloagn.com
# Contact: https://pabloagn.com/contact
# Part of Blog Article: the-state-of-our-world-in-2023-pt-1
# ------------------------------------------------------------------------------
# ------------------------------------------------------------------------------
# R Basics
# ------------------------------------------------------------------------------
# Load libraries
library(readr)
library(readxl)
library(dplyr)
library(tidyr)
library(data.table)
library(lubridate)
library(ggplot2)
library(ggalt)
library(RColorBrewer)
library(viridis)
# Define directories
rDir <- "data/raw/"
wDir <- "outputs"
# Define global params
min_year <- 1990
max_year <- 2022
# Data reading
# ------------------------------------------------------------------------------
# Load data using read.csv (Dataframe)
df_csv_dataframe <- read.csv(file.path(rDir,
"GDP_Per_Capita",
"API_NY.GDP.PCAP.PP.CD_DS2_en_csv_v2_6011310.csv"))
# Check object type
class(df_csv_dataframe)
# Load data using fread (data.table)
df_csv_datatable <- fread(file.path(rDir,
"GDP_Per_Capita",
"API_NY.GDP.PCAP.PP.CD_DS2_en_csv_v2_6011310.csv"))
# Check object type
class(df_csv_datatable)
View(df_csv_datatable)
df_csv_datatable <- fread(file.path(rDir,
"GDP_Per_Capita",
"API_NY.GDP.PCAP.PP.CD_DS2_en_csv_v2_6011310.csv"),
header=TRUE)
View(df_csv_datatable)
source("~/Professional Projects/A Journey Through Data Science/Blog/socioeconomics/the-state-of-our-world-in-2023/src/R/0_r_basics.R", echo=TRUE)
source("~/Professional Projects/A Journey Through Data Science/Blog/socioeconomics/the-state-of-our-world-in-2023/src/R/0_r_basics.R", echo=TRUE)
source("~/Professional Projects/A Journey Through Data Science/Blog/socioeconomics/the-state-of-our-world-in-2023/src/R/0_r_basics.R", echo=TRUE)
# Select columns
colnames(df_csv_datatable)
View(df_csv_dataframe)
View(df_csv_datatable)
country_codes <- c("MEX", "ARG", "BRA")
df_csv_datatable <- df_csv_datatable[df_csv_datatable$`Country Code` %in% country_codes,]
View(df_csv_datatable)
df_csv_datatable <- df_csv_datatable[df_csv_datatable$"Country Code" %in% country_codes,]
source("~/Professional Projects/A Journey Through Data Science/Blog/socioeconomics/the-state-of-our-world-in-2023/src/R/0_r_basics.R", echo=TRUE)
average_metric <- df_csv_datatable[df_csv_datatable$target_year]
View(average_metric)
average_metric <- df_csv_datatable[df_csv_datatable$target_year,]
df_csv_datatable[df_csv_datatable$target_year,]
df_csv_datatable[df_csv_datatable$2020,]
df_csv_datatable[df_csv_datatable$`target_year`,]
View(df_csv_datatable)
df_csv_datatable[df_csv_datatable$`target_year`,]
target_year <- "2010"
df_csv_datatable[df_csv_datatable$`target_year`,]
df_csv_datatable[df_csv_datatable$target_year,]
df_csv_datatable[df_csv_datatable$"2020",]
colnames(df_csv_datatable)
df_csv_datatable[,df_csv_datatable$"2020"]
View(df_csv_datatable)
mean(df_csv_datatable[,df_csv_datatable$"2020"])
target_year <- "2010"
mean(df_csv_datatable[,df_csv_datatable$target_year])
mean(df_csv_datatable[,df_csv_datatable$`target_year`])
target_year <- quote("2010")
mean(df_csv_datatable[,eval(target_year)])
target_year <- "2010"
mean(df_csv_datatable[,get(target_year)])
sprintf("Average metric for %s. is: %s.", country_codes, mean_metric)
# Select columns
country_codes <- c("MEX", "ARG", "BRA")
df_csv_datatable <- df_csv_datatable[df_csv_datatable$`Country Code` %in% country_codes,]
# Perform operations:
#   Get metrics for a specific year
#   Calculate the average
target_year <- "2010"
mean_metric <- mean(df_csv_datatable[,get(target_year)])
sprintf("Average metric for %s. is: %s.", country_codes, mean_metric)
# Select columns
country_codes <- c("MEX", "ARG", "BRA")
df_csv_datatable <- df_csv_datatable[df_csv_datatable$`Country Code` %in% country_codes,]
# Perform operations:
#   Get metrics for a specific year
#   Calculate the average
target_year <- "2010"
mean_metric <- mean(df_csv_datatable[,get(target_year)])
countries <- paste(country_codes, '')
sprintf("Average metric for %s. is: %s.", country_codes, mean_metric)
# Select columns
country_codes <- c("MEX", "ARG", "BRA")
df_csv_datatable <- df_csv_datatable[df_csv_datatable$`Country Code` %in% country_codes,]
# Perform operations:
#   Get metrics for a specific year
#   Calculate the average
target_year <- "2010"
mean_metric <- mean(df_csv_datatable[,get(target_year)])
collapsed_countries <- paste(country_codes, '')
sprintf("Average metric for %s. is: %s.", collapsed_countries, mean_metric)
collapsed_countries
sprintf("Average metric for %s is: %s.", collapsed_countries, mean_metric)
target_year <- "2010"
mean_metric <- mean(df_csv_datatable[,get(target_year)])
collapsed_countries <- paste(country_codes, collapse='')
sprintf("Average metric for %s is: %s.", collapsed_countries, mean_metric)
target_year <- "2010"
mean_metric <- mean(df_csv_datatable[,get(target_year)])
collapsed_countries <- paste(country_codes, collapse=', ')
sprintf("Average metric for %s is: %s.", collapsed_countries, mean_metric)
View(df_csv_dataframe)
singapore_average <- df_csv_dataframe[df_csv_dataframe$Country.Code %in% "SGP"] %<%
df_csv_dataframe[,get(c("x2020", "X2021"))]
singapore_average <- df_csv_dataframe[df_csv_dataframe$Country.Code %in% "SGP"] %>%
df_csv_dataframe[,get(c("x2020", "X2021"))]
singapore_average <- df_csv_dataframe[df_csv_dataframe$Country.Code %in% "SGP"] %>%
df_csv_dataframe[,c("x2020", "X2021")]
singapore_average <- df_csv_dataframe[df_csv_dataframe$Country.Code %in% "SGP"] %>%
df_csv_dataframe[, c("x2020", "X2021")]
singapore_average <- df_csv_dataframe %>%
filter(Country.Code == "SGP") %>%
select(X2020, X2021)
View(singapore_average)
singapore_average <- df_csv_dataframe %>%
filter(Country.Code == "SGP") %>%
select(X2020, X2021) %>%
pivot_longer(cols = everyting()) %>%
summarize(Mean = mean(value))
source("~/Professional Projects/A Journey Through Data Science/Blog/socioeconomics/the-state-of-our-world-in-2023/src/R/0_r_basics.R", echo=TRUE)
singapore_average <- df_csv_dataframe %>%
filter(Country.Code == "SGP") %>%
select(X2020, X2021) %>%
pivot_longer(cols = everything()) %>%
summarize(Mean = mean(value))
View(singapore_average)
sprintf("Average for Singapore metric is: %s.", singapore_average)
View(df_csv_dataframe)
df_long <- pivot_longer(df_csv_datatable,
starts_with("X"),
names_to = "Year",
values_to = "Metric")
# Reshape object for better manipulation
df_long <- pivot_longer(df_csv_datatable,
cols = starts_with("X"),
names_to = "Year",
values_to = "Metric")
View(df_csv_dataframe)
df_long <- pivot_longer(df_csv_datatable,
cols = c(starts_with("X")),
names_to = "Year",
values_to = "Metric")
df_long <- pivot_longer(df_csv_datatable,
cols = starts_with('X'),
names_to = "Year",
values_to = "Metric")
df_long <- pivot_longer(df_csv_dataframe,
cols = starts_with('X'),
names_to = "Year",
values_to = "Metric")
View(df_long)
df_long <- pivot_longer(df_csv_dataframe,
cols = starts_with('X'),
names_to = "Year",
values_to = "Metric",
names_prefix = "X")
View(df_long)
df_long %>% pivot_longer(cols = starts_with('X'),
names_to = "Year",
values_to = "Metric",
names_prefix = "X")
df_long <- df_csv_dataframe %>%
pivot_longer(cols = starts_with('X'),
names_to = "Year",
values_to = "Metric",
names_prefix = "X")
View(df_long)
# Cast years to integers
df_long$Year <- as.numeric(df_long$Year)
ggplot(data = df_long,
mapping = aes(x = Year, y = Value, color = Country.Name)) +
geom_line() +
geom_point() +
theme_gray() +
labs(title = df_indicator,
x = "Year",
y = "Value",
color = "Country")
# Reshape object for better manipulation
df_long <- df_csv_dataframe %>%
pivot_longer(cols = starts_with('X'),
names_to = "Year",
values_to = "Metric",
names_prefix = "X")
# Cast years to integers
df_long$Year <- as.numeric(df_long$Year)
# Get indicator title
df_indicator <- unique(df_long$Indicator.Name)[1]
# A simple time series
ggplot(data = df_long,
mapping = aes(x = Year, y = Metric, color = Country.Name)) +
geom_line() +
geom_point() +
theme_gray() +
labs(title = df_indicator,
x = "Year",
y = "Metric",
color = "Country")
# Check head
head(df_long)
ggplot(data = df_long,
mapping = aes(x = Year, y = Metric, color = Country.Name)) +
geom_line() +
theme_gray() +
labs(title = df_indicator,
x = "Year",
y = "USD (PPP)",
color = "Country")
